<div class="header-dashboard">
  <div class="title-dashboard">
    <h2>{{title}}</h2>
  </div>

  <div class="filter-group">
    <div class="filter-item">
      <label for="yearSelect">Năm:</label>
      <select id="yearSelect"></select>
    </div>
    <div class="filter-item">
      <label for="monthSelect">Tháng:</label>
      <select id="monthSelect">
        <option value="all">Tất cả tháng</option>
      </select>
    </div>
    <div class="filter-item">
      <label for="daySelect">Ngày:</label>
      <select id="daySelect">
        <option value="all">Tất cả ngày</option>
      </select>
    </div>
  </div>
</div>

<div class = "body-dashboard">

  <div class = "item-body">

    <div id="average-card" style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

  </div>


  <div class = "item-body">

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

  </div>

  <div class = "item-body">
    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>

    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>
  </div>

  <div class = "item-body">
    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>
    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>
    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>
    <div  style="margin-top: 16px; padding: 12px; border: 1px solid #ccc; border-radius: 8px;">
      <p>Đang tải...</p>
    </div>
  </div>

</div>



<script>
  let fullData = [];

  async function fetchData() {
    const res = await fetch('/dashboard/average-duration?filterType=day');
    const json = await res.json();
    if (!json.success) {
      document.getElementById('average-card').innerHTML = '<p>Lỗi tải dữ liệu</p>';
      return;
    }

    fullData = json.data;

    const yearSelect = document.getElementById('yearSelect');
    const monthSelect = document.getElementById('monthSelect');
    const daySelect = document.getElementById('daySelect');

    // Lấy danh sách năm, sắp xếp giảm dần
    const years = [...new Set(fullData.map(d => d.PERIOD.split('/')[2]))].sort((a,b) => b - a);
    yearSelect.innerHTML = years.map(y => `<option value="${y}">${y}</option>`).join('');
    yearSelect.value = years[0]; // mặc định năm gần nhất

    updateMonths(years[0]);
    updateDays(monthSelect.value);

    showAverageYear(years[0]);
  }

  function updateMonths(year) {
    const monthSelect = document.getElementById('monthSelect');
    const filteredByYear = fullData.filter(d => d.PERIOD.endsWith(year));
    const months = [...new Set(filteredByYear.map(d => d.PERIOD.split('/')[1]))].sort((a,b) => a - b);

    // Thêm option "Tất cả tháng" ở đầu
    monthSelect.innerHTML = `<option value="all">Tất cả tháng</option>` + 
      months.map(m => `<option value="${m}">${m}</option>`).join('');
    
    monthSelect.value = 'all';
  }

  function updateDays(month) {
    const year = document.getElementById('yearSelect').value;
    const daySelect = document.getElementById('daySelect');

    if (month === 'all') {
      daySelect.innerHTML = `<option value="all">Tất cả ngày</option>`;
      daySelect.value = 'all';
      return;
    }

    const filteredByYear = fullData.filter(d => d.PERIOD.endsWith(year));
    const filteredByMonth = filteredByYear.filter(d => d.PERIOD.endsWith(`${month}/${year}`));
    const days = [...new Set(filteredByMonth.map(d => d.PERIOD.split('/')[0]))].sort((a,b) => a - b);

    daySelect.innerHTML = `<option value="all">Tất cả ngày</option>` + 
      days.map(d => `<option value="${d}">${d}</option>`).join('');
    daySelect.value = 'all';
  }

  function showAverageYear(year) {
    const filtered = fullData.filter(d => d.PERIOD.endsWith(year));
    const yearData = filtered.reduce((acc, cur) => {
      acc.sum += cur.AVG_DURATION_MINUTES * 1;
      acc.count++;
      return acc;
    }, {sum: 0, count: 0});
    const avgYear = yearData.count ? (yearData.sum / yearData.count) : 0;
    document.getElementById('average-card').innerHTML = `<p><strong>Năm ${year}</strong>: ${avgYear.toFixed(2)} phút</p>`;
  }

  function showAverageMonth(year, month) {
    if (month === 'all') {
      showAverageYear(year);
      return;
    }
    const filtered = fullData.filter(d => d.PERIOD.endsWith(`${month}/${year}`));
    const monthData = filtered.reduce((acc, cur) => {
      acc.sum += cur.AVG_DURATION_MINUTES * 1;
      acc.count++;
      return acc;
    }, {sum: 0, count: 0});
    const avgMonth = monthData.count ? (monthData.sum / monthData.count) : 0;
    document.getElementById('average-card').innerHTML = `<p><strong>Tháng ${month}/${year}</strong>: ${avgMonth.toFixed(2)} phút</p>`;
  }

  function showAverageDay(year, month, day) {
    if (day === 'all') {
      showAverageMonth(year, month);
      return;
    }
    const periodStr = `${day}/${month}/${year}`;
    const dayData = fullData.find(d => d.PERIOD === periodStr);
    const avgDay = dayData ? dayData.AVG_DURATION_MINUTES : 0;
    document.getElementById('average-card').innerHTML = `<p><strong>Ngày ${periodStr}</strong>: ${avgDay.toFixed(2)} phút</p>`;
  }

  document.getElementById('yearSelect').addEventListener('change', (e) => {
    const year = e.target.value;
    updateMonths(year);
    updateDays(document.getElementById('monthSelect').value);
    showAverageYear(year);
  });

  document.getElementById('monthSelect').addEventListener('change', (e) => {
    const year = document.getElementById('yearSelect').value;
    const month = e.target.value;
    updateDays(month);
    showAverageMonth(year, month);
  });

  document.getElementById('daySelect').addEventListener('change', (e) => {
    const year = document.getElementById('yearSelect').value;
    const month = document.getElementById('monthSelect').value;
    const day = e.target.value;
    showAverageDay(year, month, day);
  });

  // Gọi mặc định khi load trang
  fetchData();
</script>
