<div class="account">
  <h1 class="account__title">Qu·∫£n l√Ω t√†i kho·∫£n</h1>

  <!-- N√∫t T·∫°o m·ªõi -->
  <div class="account__create-wrapper">
    <a href="#" id="createAccountBtn" class="account__button-create">‚ûï T·∫°o t√†i kho·∫£n m·ªõi</a>
  </div>

  <!-- Danh s√°ch b√°o c√°o -->
  <section class="account__list">
    <h2 class="account__list-title">üìã Danh s√°ch t√†i kho·∫£n</h2>
    <div class="account__table-wrapper">
      <table id="accountTable" class="account__table" style="display:none;">
        <thead>
          <tr>
            <th>H·ªç v√† t√™n</th>
            <th>T√™n t√†i kho·∫£n</th>
            <th>email</th>
            <th>Role</th>
            <th>Ph√≤ng</th>
            <th>Ng√†y t·∫°o</th>
            <th>Ng√†y c·∫≠p nh·∫≠t</th>
            <th></th>
          </tr>
        </thead>
        <tbody id="accountTableBody"></tbody>
      </table>
    </div>
    <p id="noAccount" class="account__no-data" style="display:none;">Ch∆∞a c√≥ t√†i
      kho·∫£n n√†o.</p>
  </section>
</div>


<script>
  window.user = {{{json user}}}; // d·ªØ li·ªáu user t·ª´ server

  document.getElementById('createAccountBtn').addEventListener('click', function () {
    const hasPermission = window.user?.permissions?.canManageUsers;

    if (hasPermission) {
      window.location.href = '/auth/account/create';
    } else {
      showAlert('B·∫°n kh√¥ng c√≥ quy·ªÅn t·∫°o ng∆∞·ªùi d√πng !!!', 'warning');
    }
  });

  document.addEventListener('DOMContentLoaded', () => {
    loadUsers();
  });

  async function loadUsers() {
  const tbody = document.getElementById('accountTableBody');
  const noDataMsg = document.getElementById('noAccount');
  const userTable = document.getElementById('accountTable');

  if (!tbody || !noDataMsg || !userTable) {
    console.error('‚ùå Thi·∫øu ph·∫ßn t·ª≠ trong DOM, ki·ªÉm tra l·∫°i HTML!');
    return;
  }

  const department = window.user?.department;
  if (!department) {
    console.error('‚ùå Kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c ph√≤ng ban c·ªßa ng∆∞·ªùi d√πng!');
    return;
  }

  try {
    const res = await fetch(`/auth/account/${encodeURIComponent(department)}`);
    const { success, users } = await res.json();

    if (!success || !users.length) {
      noDataMsg.style.display = 'block';
      userTable.style.display = 'none';
      tbody.innerHTML = '';
      return;
    }

    noDataMsg.style.display = 'none';
    userTable.style.display = 'table';
    tbody.innerHTML = '';

    users.forEach(user => {
      const tr = document.createElement('tr');
      tr.setAttribute('data-id', user._id);
      tr.innerHTML = `
        <td>${user.name}</td>
        <td>${user.username}</td>
        <td>${user.email}</td>
        <td>${user.role}</td>
        <td>${user.department || ''}</td>
        <td>${user.createdAt}</td>
        <td>${user.updatedAt}</td>
        <td>
          <div class="account__actions">
            <a href="#" class="editAccountBtn account__action-link" data-userid="${user._id}">‚úèÔ∏è S·ª≠a</a>
            <button class="account__action-delete" onclick="deleteUser('${user._id}')">üóëÔ∏è X√≥a</button>
          </div>
        </td>
      `;
      tbody.appendChild(tr);
    });

    // G√°n s·ª± ki·ªán click cho n√∫t "S·ª≠a"
    document.querySelectorAll('.editAccountBtn').forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        const hasPermission = window.user?.permissions?.canManageUsers;
        if (!hasPermission) {
          showAlert('B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠a ng∆∞·ªùi d√πng !!!', 'warning');
          return;
        }

        const userId = btn.getAttribute('data-userid');
        if (userId) {
          window.location.href = `/auth/user/${userId}`;
        }
      });
    });

  } catch (err) {
    console.error('‚ùå Error loading users:', err);
    alert('Kh√¥ng th·ªÉ t·∫£i danh s√°ch t√†i kho·∫£n.');
  }
}


  async function deleteUser(id) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën xo√° t√†i kho·∫£n n√†y?')) return;

    try {
      const res = await fetch(`/auth/user/${id}`, {
        method: 'DELETE',
      });

      if (!res.ok) {
        let errData = null;
        try {
          errData = await res.json();
        } catch {
          showAlert(`L·ªói ${res.status}: ${res.statusText}`, 'error');
          return;
        }
        showAlert('X√≥a th·∫•t b·∫°i: ' + (errData.message || `L·ªói ${res.status}`), 'warning');
        return;
      }

      const data = await res.json();
      if (data.success) {
        showAlert('ƒê√£ xo√° t√†i kho·∫£n th√†nh c√¥ng!', 'success');
        loadUsers();
      } else {
        showAlert('X√≥a th·∫•t b·∫°i: ' + (data.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh'), 'warning');
      }
    } catch (err) {
      console.log(err);
      showAlert('L·ªói khi xo√° t√†i kho·∫£n: ' + err.message, 'error');
    }
  }
</script>
