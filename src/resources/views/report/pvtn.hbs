<div class="report-pvt">
  <h1 class="report-pvt__title">üìÑ B√°o c√°o tu·∫ßn - Ph√≤ng V√¥ Tuy·∫øn</h1>

  <!-- N√∫t T·∫°o m·ªõi -->
  <div class="report-pvt__create-wrapper">
 
  <a href ="#" id="createReportBtn" class="report-pvt__button-create">‚ûï T·∫°o b√°o c√°o m·ªõi</a>

  
  </div>

  <!-- Danh s√°ch b√°o c√°o -->
  <section class="report-pvt__list">
    <h2 class="report-pvt__list-title">üìã Danh s√°ch b√°o c√°o</h2>
    <div class="report-pvt__table-wrapper">
      <table id="reportTable" class="report-pvt__table" style="display:none;">
        <thead>
          <tr>
            <th>T√™n b√°o c√°o</th>
            <th>S·ªë hi·ªáu</th>
            <th>Ng√†y t·∫°o</th>
            <th>Ph√≤ng</th>
            <th></th>
          </tr>
        </thead>
        <tbody id="reportTableBody"></tbody>
      </table>
    </div>
    <p id="noReports" class="report-pvt__no-data" style="display:none;">Ch∆∞a c√≥ b√°o c√°o n√†o.</p>
  </section>
</div>


<script>
  window.user = {{{json user}}};
</script>



<script>

  document.addEventListener('DOMContentLoaded', () => {
    loadReports();

    document.getElementById('createReportBtn').addEventListener('click', function () {
      const hasPermission = window.user?.permissions?.canCreateReports;

      if (hasPermission) {
        window.location.href = '/report/pvt/create';
      } else {
        showAlert('B·∫°n kh√¥ng c√≥ quy·ªÅn t·∫°o b√°o c√°o !!!', 'warning');
      }
    });
  });

  async function loadReports() {
    const tbody = document.getElementById('reportTableBody');
    const noDataMsg = document.getElementById('noReports');
    const reportTable = document.getElementById('reportTable');

    if (!tbody || !noDataMsg || !reportTable) {
      console.error('‚ùå Thi·∫øu ph·∫ßn t·ª≠ trong DOM, ki·ªÉm tra l·∫°i HTML!');
      return;
    }

    try {
      const res = await fetch('/report/pvt');
      const { success, reports } = await res.json();

      if (!success || !reports.length) {
        noDataMsg.style.display = 'block';
        reportTable.style.display = 'none';
        tbody.innerHTML = '';
        return;
      }

      noDataMsg.style.display = 'none';
      reportTable.style.display = 'table';
      tbody.innerHTML = '';

      reports.forEach(report => {
        const tr = document.createElement('tr');
        tr.setAttribute('data-id', report._id);

        tr.innerHTML = `
          <td>${report.reportName}</td>
          <td>${report.number} /BC-VTN</td>
          <td>${report.date}</td>
          <td>${report.department || 'Ph√≤ng V√¥ Tuy·∫øn'}</td>
          <td>
            <div class="report-pvt__actions">
              <a href="#" class="report-pvt__action-link" onclick="copyReport('${report._id}')">üìã Sao ch√©p</a>
              <a href="#" class="report-pvt__action-link editReport" data-id="${report._id}">‚úèÔ∏è S·ª≠a</a>
              <button class="report-pvt__action-delete" onclick="deleteReport('${report._id}')">üóëÔ∏è X√≥a</button>
            </div>
          </td>
        `;

        tr.addEventListener('click', (e) => {
          if (e.target.closest('.report-pvt__actions')) return;
          window.location.href = `/report/pvt/detail/${report._id}`;
        });

        tbody.appendChild(tr);
      });

      attachEditListeners(); // G·∫Øn click cho c√°c n√∫t "S·ª≠a"
    } catch (err) {
      console.error('‚ùå Error loading reports:', err);
      alert('Kh√¥ng th·ªÉ t·∫£i danh s√°ch b√°o c√°o.');
    }
  }

  async function deleteReport(id) {
    if (!confirm('Xo√° b√°o c√°o n√†y?')) return;

    try {
      const res = await fetch(`/report/pvt/${id}`, {
        method: 'DELETE',
      });
      const data = await res.json();

      if (data.success) {
        showAlert('X√≥a b√°o c√°o th√†nh c√¥ng!', 'success');
        loadReports();
      } else {
        showAlert('X√≥a th·∫•t b·∫°i: ' + (data.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh'), 'warning');
      }
    } catch (err) {
      console.log(err)
      showAlert('L·ªói khi x√≥a b√°o c√°o: ' + err.message, 'error');
    }
  }

  function attachEditListeners() {
    document.querySelectorAll('.editReport').forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        const reportId = this.dataset.id;
        const hasPermission = window.user?.permissions?.canCreateReports;

        if (hasPermission) {
          window.location.href = `/report/pvt/edit/${reportId}`;
        } else {
          showAlert('B·∫°n kh√¥ng c√≥ quy·ªÅn ch·ªânh s·ª≠a b√°o c√°o !!!', 'warning');
        }
      });
    });
  }


  async function copyReport(id) {
    const hasPermission = window.user?.permissions?.canCreateReports;

    if (!hasPermission) {
      showAlert('B·∫°n kh√¥ng c√≥ quy·ªÅn sao ch√©p b√°o c√°o !!!', 'warning');
      return;
    }

    try {
      const res = await fetch(`/report/pvt/copy/${id}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      const result = await res.json();

      if (result.success) {
        showAlert('ƒê√£ sao ch√©p b√°o c√°o, chuy·ªÉn ƒë·∫øn trang ch·ªânh s·ª≠a...', 'success');
        // ‚úÖ Chuy·ªÉn ƒë·∫øn trang s·ª≠a b√°o c√°o m·ªõi
        window.location.href = `/report/pvt/edit/${result.newReportId}`;
      } else {
        showAlert('Sao ch√©p th·∫•t b·∫°i: ' + (result.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh'), 'error');
      }
    } catch (err) {
      console.error('‚ùå L·ªói khi sao ch√©p:', err);
      showAlert('L·ªói khi sao ch√©p: ' + err.message, 'error');
    }
  }




</script>

